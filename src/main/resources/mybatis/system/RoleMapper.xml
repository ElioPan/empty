<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.system.dao.RoleDao">

	<select id="get" resultType="com.ev.system.domain.RoleDO">
		select
		`role_id`,`role_name`,`role_sign`,`remark`,`data_permission`,`create_by`,`create_time`,`update_time`
		from sys_role where role_id = #{value}
	</select>

	<select id="list" resultType="com.ev.system.domain.RoleDO">
		select
		`role_id`,`role_name`,`role_sign`,`remark`,`data_permission`,`create_by`,`create_time`,`update_time`
		from sys_role
		<where>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
			<if test="roleSign != null and roleSign != ''"> and role_sign = #{roleSign} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
            <if test="dataPermission != null and dataPermission != ''"> and data_permission = #{dataPermission} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by role_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sys_role
		<where>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
			<if test="roleSign != null and roleSign != ''"> and role_sign = #{roleSign} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
            <if test="dataPermission != null and dataPermission != ''"> and data_permission = #{dataPermission} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.ev.system.domain.RoleDO"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into sys_role
		(
		`role_name`,
		`role_sign`,
		`remark`,
		`data_permission`,
		`create_by`,
		`create_time`,
		`update_time`
		)
		values
		(
		#{roleName},
		#{roleSign},
		#{remark},
		#{dataPermission},
		#{createBy},
		#{createTime},
		#{updateTime}
		)
	</insert>

	<update id="update" parameterType="com.ev.system.domain.RoleDO">
		update sys_role
		<set>
			<if test="roleName != null">`role_name` = #{roleName}, </if>
			<if test="roleSign != null">`role_sign` = #{roleSign}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
            <if test="dataPermission != null">`data_permission` = #{dataPermission}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where role_id = #{roleId}
	</update>

	<delete id="remove">
		delete from sys_role where role_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from sys_role where role_id in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>

	<select id="getRByName" resultType="com.ev.system.domain.RoleDO">
		select
		`role_id`,`role_name`,`role_sign`,`remark`,`data_permission`,`create_by`,`create_time`,`update_time`
		from sys_role where role_name = #{value}
	</select>

	<select id="getByIds" resultType="com.ev.system.domain.RoleDO">
		select
			`role_id`,`role_name`,`role_sign`,`remark`,`data_permission`,`create_by`,`create_time`,`update_time`
		from sys_role where role_id in
		<foreach item="item" collection="ids" open="(" separator=","
				 close=")">
			#{item}
		</foreach>
	</select>

</mapper>