<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.custom.dao.PaymentTypeDao">

	<select id="get" resultType="com.ev.custom.domain.PaymentTypeDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM cus_payment_type 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.custom.domain.PaymentTypeDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM cus_payment_type
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM cus_payment_type
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`code`,`name`,`remarks`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`,`audit_sign`,`auditor`,`audit_time`
	</sql>

    <sql id="sql_condition">
       				 <where>
							<if test="maxNo != null and maxNo != ''"> and LEFT(code,CHAR_LENGTH(#{maxNo})) = #{maxNo} </if>
							<if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="code != null and code != ''"> AND code = #{code} </if>
                            <if test="name != null and name != ''"> AND name = #{name} </if>
                            <if test="remarks != null and remarks != ''"> AND remarks = #{remarks} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
                            <if test="auditSign != null and auditSign != ''"> AND audit_sign = #{auditSign} </if>
                            <if test="auditor != null and auditor != ''"> AND auditor = #{auditor} </if>
                            <if test="auditTime != null and auditTime != ''"> AND audit_time = #{auditTime} </if>
						    AND del_flag = 0
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.custom.domain.PaymentTypeDO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO cus_payment_type
		(
			`code`, 
			`name`, 
			`remarks`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`, 
			`audit_sign`, 
			`auditor`, 
			`audit_time`
		)
		VALUES
		(
			#{code}, 
			#{name}, 
			#{remarks}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}, 
			#{auditSign}, 
			#{auditor}, 
			#{auditTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.custom.domain.PaymentTypeDO">
		UPDATE cus_payment_type
		<set>
			<if test="code != null">`code` = #{code}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}, </if>
			<if test="auditSign != null">`audit_sign` = #{auditSign}, </if>
			<if test="auditor != null">`auditor` = #{auditor}, </if>
			<if test="auditTime != null">`audit_time` = #{auditTime}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateAll" parameterType="com.ev.custom.domain.PaymentTypeDO">
		UPDATE cus_payment_type SET
			`code` = #{code}, 
			`name` = #{name}, 
			`remarks` = #{remarks}, 
			`create_by` = #{createBy}, 
			`create_time` = #{createTime}, 
			`update_by` = #{updateBy}, 
			`update_time` = #{updateTime}, 
			`del_flag` = #{delFlag}, 
			`audit_sign` = #{auditSign}, 
			`auditor` = #{auditor}, 
			`audit_time` = #{auditTime}
		WHERE id = #{id}
	</update>

	
	<delete id="remove">
		DELETE FROM cus_payment_type WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM cus_payment_type WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="listOfMap" resultType="map">
		SELECT
		id,
		`code`,
		`name`,
		`remarks`,
		`audit_sign` AS auditSign,
		`auditor`,
		`audit_time` AS auditTime
		FROM cus_payment_type
		<include refid="sql_condition"/>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countForMap" resultType="int">
		select
		count(*)
		FROM
		cus_payment_type a
		<where>
			<if test="name != null and name != ''"> and a.name like CONCAT('%',#{name},'%') </if>
			<if test="newName != null and newName != ''"> and a.name = #{newName} </if>
			<if test="auditSign != null and auditSign != ''"> and a.audit_sign =#{auditSign}</if>
			<if test="haveId != null and haveId != ''"> and a.id &lt;&gt; #{haveId} </if>
			<if test="id != null and id != ''"> and a.id = #{id} </if>
			and a.del_flag=0
		</where>
	</select>

</mapper>