<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.custom.dao.NoticeDao">

	<select id="get" resultType="com.ev.custom.domain.NoticeDO">
		select `id`,`plan_id`,`plan_type`,`begin_time`,`end_time`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag` from cus_notice where id = #{value}
	</select>

	<select id="list" resultType="com.ev.custom.domain.NoticeDO">
		select `id`,`plan_id`,`plan_type`,`begin_time`,`end_time`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag` from cus_notice
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="planId != null and planId != ''"> and plan_id = #{planId} </if>
		  		  <if test="planType != null and planType != ''"> and plan_type = #{planType} </if>
		  		  <if test="beginTime != null and beginTime != ''"> and begin_time = #{beginTime} </if>
		  		  <if test="endTime != null and endTime != ''"> and end_time = #{endTime} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from cus_notice
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="planId != null and planId != ''"> and plan_id = #{planId} </if>
		  		  <if test="planType != null and planType != ''"> and plan_type = #{planType} </if>
		  		  <if test="beginTime != null and beginTime != ''"> and begin_time = #{beginTime} </if>
		  		  <if test="endTime != null and endTime != ''"> and end_time = #{endTime} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.ev.custom.domain.NoticeDO" useGeneratedKeys="true" keyProperty="id">
		insert into cus_notice
		(
			`plan_id`, 
			`plan_type`, 
			`begin_time`, 
			`end_time`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{planId}, 
			#{planType}, 
			#{beginTime}, 
			#{endTime}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.custom.domain.NoticeDO">
		update cus_notice 
		<set>
			<if test="planId != null">`plan_id` = #{planId}, </if>
			<if test="planType != null">`plan_type` = #{planType}, </if>
			<if test="beginTime != null">`begin_time` = #{beginTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from cus_notice where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from cus_notice where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>