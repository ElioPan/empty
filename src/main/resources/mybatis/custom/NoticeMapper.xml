<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.custom.dao.NoticeDao">

	<select id="get" resultType="com.ev.custom.domain.NoticeDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM cus_notice 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.custom.domain.NoticeDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM cus_notice
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM cus_notice
		<include refid="sql_condition"/>
	</select>

	<select id="listForMap" resultType="map">
		SELECT
		notice.id AS id,
		notice.type as typeId,
		notice.title as title,
		notice.content as content,
		notice.content_detail as contentDetail,
		notice.sign_status as signStatus,
		dic.`name` as typeName,
		fromuser.`name` as fromUserName,
		touser.`name` as toUserName
		FROM
		cus_notice notice
		LEFT JOIN cus_dictionary dic ON dic.id = notice.type
		LEFT JOIN sys_user fromuser ON fromuser.user_id = notice.from_user_id
		LEFT JOIN sys_user touser ON touser.user_id = notice.to_user_id
		<include refid="condition_for_map"/>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY notice.id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countForMap" resultType="int">
        select count(*)
		FROM
		cus_notice notice
		LEFT JOIN cus_dictionary dic ON dic.id = notice.type
		LEFT JOIN sys_user fromuser ON fromuser.user_id = notice.from_user_id
		LEFT JOIN sys_user touser ON touser.user_id = notice.to_user_id
		<include refid="condition_for_map"/>
	</select>

    <sql id="sql_column_list">
		`id`,`type`,`title`,`content`,`content_detail`,`from_user_id`,`to_user_id`,`expire_date`,`sign_status`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="type != null and type != ''"> AND type = #{type} </if>
                            <if test="title != null and title != ''"> AND title = #{title} </if>
                            <if test="content != null and content != ''"> AND content = #{content} </if>
                            <if test="contentDetail != null and contentDetail != ''"> AND content_detail = #{contentDetail} </if>
                            <if test="fromUserId != null and fromUserId != ''"> AND from_user_id = #{fromUserId} </if>
                            <if test="toUserId != null and toUserId != ''"> AND to_user_id = #{toUserId} </if>
                            <if test="expireDate != null and expireDate != ''"> AND expire_date = #{expireDate} </if>
                            <if test="signStatus != null and signStatus != ''"> AND sign_status = #{signStatus} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
                    </where>
    </sql>

	<sql id="condition_for_map">
		<where>
			<if test="id != null and id != ''"> AND notice.id = #{id} </if>
			<if test="type != null and type != ''"> AND notice.type = #{type} </if>
			<if test="title != null and title != ''"> AND notice.title like CONCAT('%',#{title},'%') </if>
			<if test="fromUserId != null and fromUserId != ''"> AND notice.from_user_id = #{fromUserId} </if>
			<if test="toUserId != null and toUserId != ''"> AND notice.to_user_id = #{toUserId} </if>
			<if test="signStatus != null and signStatus != ''"> AND notice.sign_status = #{signStatus} </if>
		</where>
	</sql>
	 
	<insert id="save" parameterType="com.ev.custom.domain.NoticeDO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO cus_notice
		(
			`type`, 
			`title`, 
			`content`, 
			`content_detail`, 
			`from_user_id`, 
			`to_user_id`, 
			`expire_date`, 
			`sign_status`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		VALUES
		(
			#{type}, 
			#{title}, 
			#{content}, 
			#{contentDetail}, 
			#{fromUserId}, 
			#{toUserId}, 
			#{expireDate}, 
			#{signStatus}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.custom.domain.NoticeDO">
		UPDATE cus_notice
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="title != null">`title` = #{title}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="contentDetail != null">`content_detail` = #{contentDetail}, </if>
			<if test="fromUserId != null">`from_user_id` = #{fromUserId}, </if>
			<if test="toUserId != null">`to_user_id` = #{toUserId}, </if>
			<if test="expireDate != null">`expire_date` = #{expireDate}, </if>
			<if test="signStatus != null">`sign_status` = #{signStatus}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<delete id="remove">
		DELETE FROM cus_notice WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM cus_notice WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
</mapper>