<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.custom.dao.TaskEmployeeDao">

	<select id="get" resultType="com.ev.custom.domain.TaskEmployeeDO">
		select `id`,`task_id`,`employee_id`,`assoc_type`,reply_id,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag` from cus_task_employee where id = #{value}
	</select>

	<select id="list" resultType="com.ev.custom.domain.TaskEmployeeDO">
		select `id`,`task_id`,`employee_id`,`assoc_type`,`reply_id`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag` from cus_task_employee
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="taskId != null and taskId != ''"> and task_id = #{taskId} </if>
			<if test="employeeId != null and employeeId != ''"> and employee_id = #{employeeId} </if>
			<if test="assocType != null and assocType != ''"> and assoc_type = #{assocType} </if>
			<if test="replyId != null and replyId != ''"> and reply_id = #{replyId} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			<if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
			<if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="listForMap" resultType="map">
		SELECT
		tem.id as id, tem.employee_id as employeeId,tem.task_id as taskId,tem.reply_id as replyId,sysuser.name as userName
		FROM
		cus_task_employee tem
		LEFT JOIN cus_task_main tam ON tam.id = tem.task_id
		LEFT JOIN cus_dictionary dic ON dic.id = tem.assoc_type
		LEFT JOIN sys_user sysuser on sysuser.user_id = tem.employee_id
		<where>
			<if test="id != null and id != ''"> and tem.id = #{id} </if>
			<if test="taskId != null and taskId != ''"> and tem.task_id = #{taskId} </if>
			<if test="employeeId != null and employeeId != ''"> and tem.employee_id = #{employeeId} </if>
			<if test="assocType != null and assocType != ''"> and dic.value = #{assocType} </if>
			<if test="replyId != null and replyId != ''"> and tem.value = #{replyId} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from cus_task_employee
		 <where>  
		  <if test="id != null and id != ''"> and id = #{id} </if>
		  <if test="taskId != null and taskId != ''"> and task_id = #{taskId} </if>
		  <if test="employeeId != null and employeeId != ''"> and employee_id = #{employeeId} </if>
		  <if test="assocType != null and assocType != ''"> and assoc_type = #{assocType} </if>
			 <if test="replyId != null and replyId != ''"> and reply_id = #{replyId} </if>
			 <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			 <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			 <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
			 <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
			 <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.ev.custom.domain.TaskEmployeeDO" useGeneratedKeys="true" keyProperty="id">
		insert into cus_task_employee
		(
			`task_id`,
			`employee_id`,
			`assoc_type`,
			`reply_id`,
			`create_by`,
			`create_time`,
			`update_by`,
			`update_time`,
			`del_flag`
		)
		values
		(
			#{taskId},
			#{employeeId},
			#{assocType},
			#{replyId},
			#{createBy},
			#{createTime},
			#{updateBy},
			#{updateTime},
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.custom.domain.TaskEmployeeDO">
		update cus_task_employee
		<set>
			<if test="taskId != null">`task_id` = #{taskId}, </if>
			<if test="employeeId != null">`employee_id` = #{employeeId}, </if>
			<if test="assocType != null">`assoc_type` = #{assocType}, </if>
			<if test="replyId != null">`reply_id` = #{replyId}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from cus_task_employee where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from cus_task_employee where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<delete id="removeByAssocIdAndTaskId">
		delete from cus_task_employee
			WHERE `task_id` in
				<foreach item="item" collection="taskId" open="(" separator="," close=")"  index="index">
						#{item}
				</foreach>
			and `assoc_type` in
				<foreach item="assocType" collection="assocTypes" open="(" separator="," close=")"  index="index">
						#{assocType}
				</foreach>
	</delete>

</mapper>