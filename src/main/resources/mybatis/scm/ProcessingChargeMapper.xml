<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.ProcessingChargeDao">

	<select id="get" resultType="com.ev.scm.domain.ProcessingChargeDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_processing_charge 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.ProcessingChargeDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_processing_charge
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM scm_processing_charge
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`supplier_id`,`invoice_date`,`invoice_user`,`bill_code`,`invoice_type`,`stock_in_id`,`audit_sign`,`remarks`,`auditor`,`audit_time`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="supplierId != null and supplierId != ''"> AND supplier_id = #{supplierId} </if>
                            <if test="invoiceDate != null and invoiceDate != ''"> AND invoice_date = #{invoiceDate} </if>
                            <if test="invoiceUser != null and invoiceUser != ''"> AND invoice_user = #{invoiceUser} </if>
                            <if test="billCode != null and billCode != ''"> AND bill_code = #{billCode} </if>
                            <if test="invoiceType != null and invoiceType != ''"> AND invoice_type = #{invoiceType} </if>
                            <if test="stockInId != null and stockInId != ''"> AND stock_in_id = #{stockInId} </if>
                            <if test="auditSign != null and auditSign != ''"> AND audit_sign = #{auditSign} </if>
                            <if test="remarks != null and remarks != ''"> AND remarks = #{remarks} </if>
                            <if test="auditor != null and auditor != ''"> AND auditor = #{auditor} </if>
                            <if test="auditTime != null and auditTime != ''"> AND audit_time = #{auditTime} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.scm.domain.ProcessingChargeDO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO scm_processing_charge
		(
			`supplier_id`, 
			`invoice_date`, 
			`invoice_user`, 
			`bill_code`, 
			`invoice_type`, 
			`stock_in_id`, 
			`audit_sign`, 
			`remarks`, 
			`auditor`, 
			`audit_time`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		VALUES
		(
			#{supplierId}, 
			#{invoiceDate}, 
			#{invoiceUser}, 
			#{billCode}, 
			#{invoiceType}, 
			#{stockInId}, 
			#{auditSign}, 
			#{remarks}, 
			#{auditor}, 
			#{auditTime}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.ProcessingChargeDO">
		UPDATE scm_processing_charge
		<set>
			<if test="supplierId != null">`supplier_id` = #{supplierId}, </if>
			<if test="invoiceDate != null">`invoice_date` = #{invoiceDate}, </if>
			<if test="invoiceUser != null">`invoice_user` = #{invoiceUser}, </if>
			<if test="billCode != null">`bill_code` = #{billCode}, </if>
			<if test="invoiceType != null">`invoice_type` = #{invoiceType}, </if>
			<if test="stockInId != null">`stock_in_id` = #{stockInId}, </if>
			<if test="auditSign != null">`audit_sign` = #{auditSign}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="auditor != null">`auditor` = #{auditor}, </if>
			<if test="auditTime != null">`audit_time` = #{auditTime}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateAll" parameterType="com.ev.scm.domain.ProcessingChargeDO">
		UPDATE scm_processing_charge SET
			`supplier_id` = #{supplierId},
			`invoice_date` = #{invoiceDate},
			`invoice_user` = #{invoiceUser},
			`bill_code` = #{billCode},
			`invoice_type` = #{invoiceType},
			`stock_in_id` = #{stockInId},
			`audit_sign` = #{auditSign},
			`remarks` = #{remarks},
			`auditor` = #{auditor},
			`audit_time` = #{auditTime},
			`create_by` = #{createBy},
			`create_time` = #{createTime},
			`update_by` = #{updateBy},
			`update_time` = #{updateTime},
			`del_flag` = #{delFlag}
		WHERE id = #{id}
	</update>
	
	<delete id="remove">
		DELETE FROM scm_processing_charge WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM scm_processing_charge WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!--自定义-->
	<select id="listForMap" resultType="map">
		SELECT
		item.id AS itemId,
		item.charge_id AS id,
		bill.invoice_date AS invoiceDate,
		supplier.`name` AS supplierName,
		bill.invoice_type AS invoiceType,
		dici.`name` AS invoiceyTypeName,
		bill.`bill_code` AS billCode,
		materiel.serial_no AS materielSerialNo,
		materiel. NAME AS materielName,
		materiel.specification AS specification,
		unitUom.name AS unitUomName,
		item.`count` AS count,
		item.unit_price AS unitPrice,
		item.tax_unit_price AS taxUnitPrice,
		item.`tax_rate` AS taxRate,
		item.amount AS amount,
		item.taxes AS taxes,
		item.tax_amount AS taxAmount,
		bill.audit_sign AS auditSign,
		dica.`name` AS auditSignName,
		item.source_type AS sourceType,
		dict.`name` AS sourceTypeName,
		item.source_code AS sourceCode
		<include refid="sql_map_condition"/>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by item.charge_id desc,item.id
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countForMap" resultType="map">
		SELECT
		COUNT(*) AS total,
		SUM(item.`count`) AS totalCount,
		SUM(item.`amount`) AS totalAmount,
		SUM(item.`taxes`) AS totalTaxes,
		SUM(item.`tax_amount`) AS totalTaxAmount
		<include refid="sql_map_condition"/>
	</select>

	<sql id="sql_map_condition">
		FROM
		scm_processing_charge_item item
		LEFT JOIN scm_processing_charge bill ON bill.id = item.charge_id
		LEFT JOIN cus_supplier supplier ON supplier.id = bill.supplier_id
		LEFT JOIN cus_dictionary dici ON dici.id = bill.invoice_type
		LEFT JOIN cus_materiel materiel ON materiel.`id` = item.`materiel_id`
		LEFT JOIN cus_dictionary unitUom ON unitUom.id = materiel.`unit_uom`
		LEFT JOIN cus_dictionary dica ON dica.id = bill.audit_sign
		LEFT JOIN cus_dictionary dict ON dict.id = item.source_type
		<where>
			<if test="billCode != null and billCode != ''"> and bill.bill_code = #{billCode} </if>
			<if test="supplierName != null and supplierName != ''"> and supplier.name LIKE #{supplierName} </if>
			<if test="supplierId != null and supplierId != ''"> and supplier.id = #{supplierId} </if>
			<if test="materielName != null and materielName != ''"> and materiel.name LIKE #{materielName} </if>
			<if test="startTime != null and startTime != ''"> and  DATE_FORMAT(item.create_time,'%Y-%m-%d') &gt;=  DATE_FORMAT(#{startTime},'%Y-%m-%d')</if>
			<if test="endTime != null and endTime != ''">  and  DATE_FORMAT(item.create_time,'%Y-%m-%d') &lt;=   DATE_FORMAT(#{endTime},'%Y-%m-%d')</if>

			<if test="id != null and id != ''"> and item.charge_id = #{id} </if>
			<if test="itemId != null and itemId != ''"> and item.id = #{itemId} </if>
			<if test="auditSign != null and auditSign != ''"> and bill.audit_sign = #{auditSign} </if>
			<if test="auditor != null and auditor != ''"> and bill.auditor = #{auditor} </if>
			<if test="auditTime != null and auditTime != ''"> and bill.audit_time = #{auditTime} </if>
			<if test="createBy != null and createBy != ''"> and bill.create_by = #{createBy} </if>
			<if test="createTime != null and createTime != ''"> and bill.create_time = #{createTime} </if>
			<if test="updateBy != null and updateBy != ''"> and bill.update_by = #{updateBy} </if>
			<if test="updateTime != null and updateTime != ''"> and bill.update_time = #{updateTime} </if>
			<if test="delFlag != null and delFlag != ''"> and bill.del_flag = #{delFlag} </if>
		</where>
	</sql>

	<select id="getDetail" resultType="java.util.Map">
 SELECT
        bill.`id` AS id,
        bill.`supplier_id` AS supplierId,
        supplier.name AS supplierName,
        bill.invoice_date AS invoiceDate,
        bill.`invoice_user` AS invoiceUser,
        users.`name` AS invoiceUserName,
        bill.`bill_code` AS billCode,
        bill.invoice_type AS invoiceType,
        dici.`name` AS invoiceTypeName,
        bill.stock_in_id AS stockInId,
        stock.inhead_code AS stockInCode,
        bill.`remarks` AS remarks,
        bill.create_by AS createBy,
        creater.`name` AS createByName,
        bill.`create_time` AS createTime,
        bill.auditor AS auditor,
        auditor.`name` AS auditorName,
        bill.`audit_time` AS auditTime,
        bill.audit_sign AS auditSign,
        dica.`name` AS auditSignName
        FROM scm_processing_charge bill
        LEFT JOIN cus_supplier supplier ON supplier.id = bill.supplier_id
        LEFT JOIN cus_dictionary dici ON  dici.id = bill.invoice_type
        LEFT JOIN scm_stock_in stock ON  stock.id = bill.stock_in_id
        LEFT JOIN sys_user users ON  users.user_id = bill.invoice_user
        LEFT JOIN sys_user creater ON  creater.user_id = bill.create_by
        LEFT JOIN sys_user auditor ON  auditor.user_id = bill.auditor
        LEFT JOIN cus_dictionary dica ON  dica.id = bill.audit_sign
        WHERE bill.`id` = #{value}
	</select>

<!--	<select id="childCount" resultType="int">-->
<!--    SELECT-->
<!--    COUNT(*)-->
<!--    FROM-->
<!--    (-->
<!--    SELECT-->
<!--    spci.id-->
<!--    FROM-->
<!--    scm_processing_charge_item spci-->
<!--    LEFT JOIN scm_stock_in_item ini ON ini.source_id = spci.id-->
<!--    WHERE-->
<!--    ini.source_type =276-->
<!--    AND spci.charge_id = #{value}-->
<!--    ) a-->
<!--    </select>-->
	
</mapper>