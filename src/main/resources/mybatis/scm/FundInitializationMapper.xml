<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.FundInitializationDao">

	<select id="get" resultType="com.ev.scm.domain.FundInitializationDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_fund_initialization 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.FundInitializationDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_fund_initialization
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM scm_fund_initialization
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`period`,`bank`,`account_number`,`initial_amount`,`using_start`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="period != null and period != ''"> ANDperiod = #{period} </if>
                            <if test="bank != null and bank != ''"> AND bank = #{bank} </if>
                            <if test="accountNumber != null and accountNumber != ''"> AND account_number = #{accountNumber} </if>
                            <if test="initialAmount != null and initialAmount != ''"> AND initial_amount = #{initialAmount} </if>
                            <if test="usingStart != null and usingStart != ''"> AND using_start = #{usingStart} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.scm.domain.FundInitializationDO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO scm_fund_initialization
		(
			`period`,
			`bank`, 
			`account_number`, 
			`initial_amount`, 
			`using_start`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		VALUES
		(
			#{period},
			#{bank}, 
			#{accountNumber}, 
			#{initialAmount}, 
			#{usingStart}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.FundInitializationDO">
		UPDATE scm_fund_initialization
		<set>
			<if test="period != null">`period` = #{period}, </if>
			<if test="bank != null">`bank` = #{bank}, </if>
			<if test="accountNumber != null">`account_number` = #{accountNumber}, </if>
			<if test="initialAmount != null">`initial_amount` = #{initialAmount}, </if>
			<if test="usingStart != null">`using_start` = #{usingStart}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateAll" parameterType="com.ev.scm.domain.FundInitializationDO">
		UPDATE scm_fund_initialization SET
			`period` = #{period},
			`bank` = #{bank}, 
			`account_number` = #{accountNumber}, 
			`initial_amount` = #{initialAmount}, 
			`using_start` = #{usingStart}, 
			`create_by` = #{createBy}, 
			`create_time` = #{createTime}, 
			`update_by` = #{updateBy}, 
			`update_time` = #{updateTime}, 
			`del_flag` = #{delFlag}
		WHERE id = #{id}
	</update>

	
	<delete id="remove">
		DELETE FROM scm_fund_initialization WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM scm_fund_initialization WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>



	<update id="updateUsingStart" parameterType="map">
		UPDATE
			scm_fund_initialization
		SET
			`using_start` = #{usingStart}
		WHERE id in
		<foreach item="id" collection="ids" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<select id="getlist" resultType="map">
		SELECT
		a.id,
		a.period,
		a.bank,
		b.name as bankName,
		a.account_number as accountNumber,
		a.initial_amount AS  initialAmount,
		a.using_start as usingStart,
		CASE  when a.using_start=1 then "禁用"
				when a.using_start=0 then "启用"
		       END as usingStartName
		from
		scm_fund_initialization a
		LEFT JOIN cus_dictionary b on a.bank=b.id
		<where>
			<if test="id != null and id != ''"> AND a.id = #{id} </if>
			<!--<if test="usingStart != null and usingStart !=''"> AND a.using_start = #{usingStart} </if>-->
			<if test="usingStart == 0 "> AND a.using_start = #{usingStart} </if>
			<if test="usingStart == 1 "> AND a.using_start = #{usingStart} </if>
			<if test="accountNumber != null and accountNumber !=''"> AND a.account_number = #{accountNumber} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countOfList" resultType="map">
		SELECT
		COUNT(*) as totailCount,
		IF(SUM(a.initial_amount)is null ,0,SUM(a.initial_amount)) AS  totailInitialAmount
		from
		scm_fund_initialization a
		LEFT JOIN cus_dictionary b on a.bank=b.id
		<where>
			<if test="id != null and id != ''"> AND a.id = #{id} </if>
			<!--<if test="usingStart != null and usingStart !=''"> AND a.using_start = #{usingStart} </if>-->
			<if test="usingStart == 0 "> AND a.using_start = #{usingStart} </if>
			<if test="usingStart == 1 "> AND a.using_start = #{usingStart} </if>
			<if test="accountNumber != null and accountNumber !=''"> AND a.account_number = #{accountNumber} </if>
		</where>
	</select>

</mapper>