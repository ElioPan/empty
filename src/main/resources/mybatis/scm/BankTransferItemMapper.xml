<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.BankTransferItemDao">

	<select id="get" resultType="com.ev.scm.domain.BankTransferItemDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_bank_transfer_item 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.BankTransferItemDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_bank_transfer_item
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM scm_bank_transfer_item
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`transfer_id`,`transfer_out_acc`,`transfer_in_acc`,
		`transfer_amount`,`settlement_type`,`statement_number`,
		`remarks`,`create_by`,`create_time`,`update_by`,`update_time`,
		`del_flag`,`business_type`
	</sql>

    <sql id="sql_condition">
        			<where>
                            <if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="transferId != null and transferId != ''"> AND transfer_id = #{transferId} </if>
                            <if test="transferOutAcc != null and transferOutAcc != ''"> AND transfer_out_acc = #{transferOutAcc} </if>
                            <if test="transferInAcc != null and transferInAcc != ''"> AND transfer_in_acc = #{transferInAcc} </if>
                            <if test="transferAmount != null and transferAmount != ''"> AND transfer_amount = #{transferAmount} </if>
                            <if test="settlementType != null and settlementType != ''"> AND settlement_type = #{settlementType} </if>
                            <if test="statementNumber != null and statementNumber != ''"> AND statement_number = #{statementNumber} </if>
                            <if test="remarks != null and remarks != ''"> AND remarks = #{remarks} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
							<if test="businessType != null and businessType != ''"> AND business_type = #{businessType} </if>

					</where>
    </sql>


	<insert id="save" parameterType="com.ev.scm.domain.BankTransferItemDO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO scm_bank_transfer_item
		(
			`transfer_id`, 
			`transfer_out_acc`, 
			`transfer_in_acc`, 
			`transfer_amount`, 
			`settlement_type`, 
			`statement_number`, 
			`remarks`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`,
			`business_type`
		)
		VALUES
		(
			#{transferId}, 
			#{transferOutAcc}, 
			#{transferInAcc}, 
			#{transferAmount}, 
			#{settlementType}, 
			#{statementNumber}, 
			#{remarks}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag},
			#{businessType}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.BankTransferItemDO">
		UPDATE scm_bank_transfer_item
		<set>
			<if test="transferId != null">`transfer_id` = #{transferId}, </if>
			<if test="transferOutAcc != null">`transfer_out_acc` = #{transferOutAcc}, </if>
			<if test="transferInAcc != null">`transfer_in_acc` = #{transferInAcc}, </if>
			<if test="transferAmount != null">`transfer_amount` = #{transferAmount}, </if>
			<if test="settlementType != null">`settlement_type` = #{settlementType}, </if>
			<if test="statementNumber != null">`statement_number` = #{statementNumber}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
			<if test="businessType != null">`business_type` = #{businessType}</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<delete id="remove">
		DELETE FROM scm_bank_transfer_item WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM scm_bank_transfer_item WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="removeByTransferId">
		DELETE
		FROM
		scm_bank_transfer_item
		WHERE transfer_id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="detailOfItem" resultType="map">
		select
		a.id as id ,
		a.transfer_out_acc as transferOutAcc ,
		b.account_number as transferOutAccName,
		a.transfer_in_acc as transferInAcc,
		c.account_number as transferInAccName,
		a.transfer_amount as transferAmount,
		a.settlement_type  as settlementType,
		d.name as settlementTypeName,
		a.statement_number as statementNumber ,
		a.remarks,
		a.business_type as	businessType,
		e.name as businessTypeName
		from
		scm_bank_transfer_item  a
		LEFT JOIN scm_fund_initialization b on  a.transfer_out_acc=b.id
		LEFT JOIN scm_fund_initialization c on  a.transfer_in_acc=c.id
		LEFT JOIN cus_payment_type d on  a.settlement_type=d.id
		LEFT JOIN cus_dictionary e on  a.business_type=e.id
		where
			a.transfer_id=#{id}
	</select>


	<select id="totalAmount" resultType="int">
		SELECT
		sum(transfer_amount) as totalAmount
		FROM scm_bank_transfer_item
		WHERE
          transfer_id=#{id}
	</select>

	<select id="totalOutOrInAmount" resultType="int">
		SELECT
		IF(sum(a.transfer_amount) is null,0,sum(a.transfer_amount))
		from
		scm_bank_transfer_item a
		LEFT JOIN scm_bank_transfer b on  a.transfer_id =b.id
		<where>
			<if test="startTime != null and startTime != ''"> and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &gt;=  DATE_FORMAT(#{startTime},'%Y-%m-%d')</if>
			<if test="endTime != null and endTime != ''">  and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &lt;=   DATE_FORMAT(#{endTime},'%Y-%m-%d')</if>
			<if test="transferOutAcc != null and transferOutAcc != ''"> AND a.transfer_out_acc = #{transferOutAcc} </if>
			<if test="transferInAcc != null and transferInAcc != ''"> AND a.transfer_in_acc = #{transferInAcc} </if>
			<if test="settlementType != null and settlementType != ''"> AND a.settlement_type = #{settlementType} </if>
			<if test="auditSign != null and auditSign != ''"> AND b.audit_sign = #{auditSign} </if>
			<if test="transferId != null and transferId != ''"> AND b.id <![CDATA[<>]]> #{transferId} </if>
			<if test="transferDate != null and transferDate != ''">  and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &lt;=  DATE_FORMAT(#{transferDate},'%Y-%m-%d')</if>
			<if test="fundDate != null and fundDate != ''">  and  b.transfer_date &lt;= #{fundDate}</if>
		</where>
	</select>

	<select id="getBankDetail" resultType="map">
		SELECT
		b.id as signId,
		a.id,
		b.transfer_date as fundDate,
		b.create_time as createTime,
		DATE_FORMAT(b.transfer_date,'%Y-%m-%d') as  transferDate,
		b.transfer_code as transferCode,
		a.business_type as businessType,
		c.name as businessTypeName,
		e.account_number as transferAccName,
		e.bank as backName,
		a.transfer_amount as inTransferAmount
		FROM
		scm_bank_transfer_item a
		LEFT JOIN scm_bank_transfer b on a.transfer_id=b.id
		LEFT JOIN cus_dictionary c on a.business_type=c.id
		LEFT JOIN scm_fund_initialization e on a.transfer_in_acc=e.id
		<where>
			<if test="startTime != null and startTime != ''"> and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &gt;=  DATE_FORMAT(#{startTime},'%Y-%m-%d')</if>
			<if test="endTime != null and endTime != ''">  and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &lt;=   DATE_FORMAT(#{endTime},'%Y-%m-%d')</if>
			<if test="transferInAcc != null and transferInAcc != ''"> AND a.transfer_in_acc = #{transferInAcc} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="getBankOutDetail" resultType="map">
		SELECT
		b.id as signId,
		a.id,
		b.transfer_date as fundDate,
		b.create_time as createTime,
		DATE_FORMAT(b.transfer_date,'%Y-%m-%d') as  transferDate,
		b.transfer_code as transferCode,
		a.business_type as businessType,
		c.name as businessTypeName,
		d.account_number as transferAccName,
		d.bank as  backName,
		a.transfer_amount as outTransferAmount
		FROM
		scm_bank_transfer_item a
		LEFT JOIN scm_bank_transfer b on a.transfer_id=b.id
		LEFT JOIN cus_dictionary c on a.business_type=c.id
		LEFT JOIN scm_fund_initialization d on a.transfer_out_acc=d.id
		<where>
			<if test="startTime != null and startTime != ''"> and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &gt;=  DATE_FORMAT(#{startTime},'%Y-%m-%d')</if>
			<if test="endTime != null and endTime != ''">  and  DATE_FORMAT(b.transfer_date,'%Y-%m-%d') &lt;=   DATE_FORMAT(#{endTime},'%Y-%m-%d')</if>
			<if test="transferOutAcc != null and transferOutAcc != ''"> AND a.transfer_out_acc = #{transferOutAcc} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

</mapper>