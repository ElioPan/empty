<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.StockStartDao">

	<select id="get" resultType="com.ev.scm.domain.StockStartDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_stock_start 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.StockStartDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_stock_start
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY id DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM scm_stock_start
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`start_time`,`status`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> AND id = #{id} </if>
                            <if test="startTime != null and startTime != ''"> AND start_time = #{startTime} </if>
                            <if test="status != null and status != ''"> AND status = #{status} </if>
                            <if test="createBy != null and createBy != ''"> AND create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> AND create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> AND update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> AND update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> AND del_flag = #{delFlag} </if>
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.scm.domain.StockStartDO">
		INSERT INTO scm_stock_start
		(
			`id`, 
			`start_time`, 
			`status`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		VALUES
		(
			#{id}, 
			#{startTime}, 
			#{status}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.StockStartDO">
		UPDATE scm_stock_start
		<set>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<delete id="remove">
		DELETE FROM scm_stock_start WHERE id = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM scm_stock_start WHERE id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
</mapper>