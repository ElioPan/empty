<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.ContractAlterationDao">

	<select id="get" resultType="com.ev.scm.domain.ContractAlterationDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_contract_alteration 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.ContractAlterationDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_contract_alteration
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from scm_contract_alteration
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`contract_id`,`contract_type`,`contract_code`,`version`,`alteration_content`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> and id = #{id} </if>
                            <if test="contractId != null and contractId != ''"> and contract_id = #{contractId} </if>
                            <if test="contractType != null and contractType != ''"> and contract_type = #{contractType} </if>
                            <if test="contractCode != null and contractCode != ''"> and contract_code = #{contractCode} </if>
                            <if test="version != null and version != ''"> and version = #{version} </if>
                            <if test="alterationContent != null and alterationContent != ''"> and alteration_content = #{alterationContent} </if>
                            <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.scm.domain.ContractAlterationDO" useGeneratedKeys="true" keyProperty="id">
		insert into scm_contract_alteration
		(
			`contract_id`, 
			`contract_type`, 
			`contract_code`, 
			`version`, 
			`alteration_content`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{contractId}, 
			#{contractType}, 
			#{contractCode}, 
			#{version}, 
			#{alterationContent}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.ContractAlterationDO">
		update scm_contract_alteration 
		<set>
			<if test="contractId != null">`contract_id` = #{contractId}, </if>
			<if test="contractType != null">`contract_type` = #{contractType}, </if>
			<if test="contractCode != null">`contract_code` = #{contractCode}, </if>
			<if test="version != null">`version` = #{version}, </if>
			<if test="alterationContent != null">`alteration_content` = #{alterationContent}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from scm_contract_alteration where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from scm_contract_alteration where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

    <!--自定义-->
    <select id="listForMap" resultType="map">
        SELECT
        alt.id AS id,
        alt.`contract_code` AS contractCode,
        alt.`create_time` AS createTime,
        createUser.`name` AS createByName
        <include refid="sql_map_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="countForMap" resultType="int">
        SELECT COUNT(*)
        <include refid="sql_map_condition"/>
    </select>

    <sql id="sql_map_condition">
        FROM scm_contract_alteration alt
        LEFT JOIN sys_user createUser ON createUser.user_id = alt.create_by
        <where>
            <if test="id != null and id != ''"> and alt.id = #{id} </if>
            <if test="contractId != null and contractId != ''"> and alt.contract_id = #{contractId} </if>
            <if test="contractType != null and contractType != ''"> and alt.contract_type = #{contractType} </if>
            <if test="contractCode != null and contractCode != ''"> and alt.contract_code = #{contractCode} </if>
            <if test="createByName != null and createByName != ''"> and createUser.name LIKE #{createByName} </if>

            <if test="startTime != null and startTime != ''"> and  DATE_FORMAT(alt.create_time,'%Y-%m-%d') &gt;=  DATE_FORMAT(#{startTime},'%Y-%m-%d')</if>
            <if test="endTime != null and endTime != ''">  and  DATE_FORMAT(alt.create_time,'%Y-%m-%d') &lt;=   DATE_FORMAT(#{endTime},'%Y-%m-%d')</if>

            <if test="createBy != null and createBy != ''"> and alt.create_by = #{createBy} </if>
            <if test="createTime != null and createTime != ''"> and alt.create_time = #{createTime} </if>
            <if test="updateBy != null and updateBy != ''"> and alt.update_by = #{updateBy} </if>
            <if test="updateTime != null and updateTime != ''"> and alt.update_time = #{updateTime} </if>
            <if test="delFlag != null and delFlag != ''"> and alt.del_flag = #{delFlag} </if>
        </where>

    </sql>
	
</mapper>