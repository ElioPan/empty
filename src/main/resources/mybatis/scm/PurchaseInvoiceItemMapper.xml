<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ev.scm.dao.PurchaseInvoiceItemDao">

	<select id="get" resultType="com.ev.scm.domain.PurchaseInvoiceItemDO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM scm_purchase_invoice_item 
		WHERE id = #{value}
	</select>

	<select id="list" resultType="com.ev.scm.domain.PurchaseInvoiceItemDO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM scm_purchase_invoice_item
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from scm_purchase_invoice_item
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		`id`,`purchasebill_id`,`materiel_id`,`count`,`unit_price`,`tax_unit_price`,`amount`,`tax_rate`,`taxes`,`tax_amount`,`source_id`,`source_type`,`source_code`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`
	</sql>

    <sql id="sql_condition">
        <where>
                            <if test="id != null and id != ''"> and id = #{id} </if>
                            <if test="purchasebillId != null and purchasebillId != ''"> and purchasebill_id = #{purchasebillId} </if>
                            <if test="materielId != null and materielId != ''"> and materiel_id = #{materielId} </if>
                            <if test="count != null and count != ''"> and count = #{count} </if>
                            <if test="unitPrice != null and unitPrice != ''"> and unit_price = #{unitPrice} </if>
                            <if test="taxUnitPrice != null and taxUnitPrice != ''"> and tax_unit_price = #{taxUnitPrice} </if>
                            <if test="amount != null and amount != ''"> and amount = #{amount} </if>
                            <if test="taxRate != null and taxRate != ''"> and tax_rate = #{taxRate} </if>
                            <if test="taxes != null and taxes != ''"> and taxes = #{taxes} </if>
                            <if test="taxAmount != null and taxAmount != ''"> and tax_amount = #{taxAmount} </if>
                            <if test="sourceId != null and sourceId != ''"> and source_id = #{sourceId} </if>
                            <if test="sourceType != null and sourceType != ''"> and source_type = #{sourceType} </if>
                            <if test="sourceCode != null and sourceCode != ''"> and source_code = #{sourceCode} </if>
                            <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
                            <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
                            <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
                            <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
                            <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
                    </where>
    </sql>
	 
	<insert id="save" parameterType="com.ev.scm.domain.PurchaseInvoiceItemDO" useGeneratedKeys="true" keyProperty="id">
		insert into scm_purchase_invoice_item
		(
			`purchasebill_id`, 
			`materiel_id`, 
			`count`, 
			`unit_price`, 
			`tax_unit_price`, 
			`amount`, 
			`tax_rate`, 
			`taxes`, 
			`tax_amount`, 
			`source_id`, 
			`source_type`,
			`source_code`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{purchasebillId}, 
			#{materielId}, 
			#{count}, 
			#{unitPrice}, 
			#{taxUnitPrice}, 
			#{amount}, 
			#{taxRate}, 
			#{taxes}, 
			#{taxAmount}, 
			#{sourceId}, 
			#{sourceType}, 
			#{sourceCode}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.ev.scm.domain.PurchaseInvoiceItemDO">
		update scm_purchase_invoice_item 
		<set>
			<if test="purchasebillId != null">`purchasebill_id` = #{purchasebillId}, </if>
			<if test="materielId != null">`materiel_id` = #{materielId}, </if>
			<if test="count != null">`count` = #{count}, </if>
			<if test="unitPrice != null">`unit_price` = #{unitPrice}, </if>
			<if test="taxUnitPrice != null">`tax_unit_price` = #{taxUnitPrice}, </if>
			<if test="amount != null">`amount` = #{amount}, </if>
			<if test="taxRate != null">`tax_rate` = #{taxRate}, </if>
			<if test="taxes != null">`taxes` = #{taxes}, </if>
			<if test="taxAmount != null">`tax_amount` = #{taxAmount}, </if>
			<if test="sourceId != null">`source_id` = #{sourceId}, </if>
			<if test="sourceType != null">`source_type` = #{sourceType}, </if>
			<if test="sourceCode != null">`source_code` = #{sourceCode}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from scm_purchase_invoice_item where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from scm_purchase_invoice_item where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<delete id="batchRemoveByPurcahseId">
		delete
		from
		scm_purchase_invoice_item
		where
		purchasebill_id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getDetailOfBody" resultType="map">
		SELECT
		h.id,
		h.materiel_id as materielId,
		i.name as materielName,
		i.serial_no as serialNo,
		i.specification,
		i.unit_uom as unitUom,
		k.name as unitUomName,
		h.count,
		h.unit_price as unitPrice,
		h.tax_rate as taxRate,
		h.amount,
		h.taxes,
		h.tax_amount as taxAmount,
		h.source_code as sourceCode,
		h.source_type as sourceType,
		m.name as sourceTypeName
		from
		scm_purchase_invoice_item h
		LEFT JOIN  cus_materiel i on h.materiel_id=i.id
		LEFT JOIN  cus_dictionary  k on  i.unit_uom =k.id
		LEFT JOIN  cus_dictionary  m on  h.source_type=m.id
		where
		h.purchasebill_id=#{id}
	</select>


	<select id="totalOfItem" resultType="map">
		SELECT
		IF(SUM(h.count) IS NULL,0,SUM(h.count))as totalCount,
		IF(SUM(h.amount) IS NULL,0,SUM(h.amount))as totalAmount,
		IF(SUM(h.tax_amount) IS NULL,0,SUM(h.tax_amount))as totalTaxAmount,
		IF(SUM(h.taxes) IS NULL,0,SUM(h.taxes))as totalTaxes
		from
		scm_purchase_invoice_item h
		LEFT JOIN  cus_materiel i on h.materiel_id=i.id
		LEFT JOIN  cus_dictionary  k on  i.unit_uom =k.id
		LEFT JOIN  cus_dictionary  m on  h.source_type=m.id
		WHERE
		h.purchasebill_id=#{id}
	</select>

	<select id="getSourceCode" resultType="com.ev.scm.domain.PurchaseInvoiceItemDO">
		SELECT
		DISTINCT
		h.source_code
		from
		scm_purchase_invoice_item h
		WHERE
		h.purchasebill_id=#{purchasebillId}
	</select>

	<select id="getTotalTaxAmount" resultType="map">
		SELECT
		sum(h.tax_amount is null,0,h.tax_amount) as totalTaxAmount
		from
		scm_purchase_invoice_item h
		WHERE
		h.source_code=#{sourceCode}
	</select>
	
</mapper>