<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Dao">

	<select id="get" resultType="${package}.domain.${className}DO">
		SELECT 
		<include refid="sql_column_list"/>  
		FROM ${tableName} 
		WHERE ${pk.columnName} = #{value}
	</select>

	<select id="list" resultType="${package}.domain.${className}DO">
		SELECT 
		<include refid="sql_column_list"/>
		FROM ${tableName}
		<include refid="sql_condition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
			<otherwise>
                ORDER BY ${pk.columnName} DESC
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
        SELECT COUNT(*) FROM ${tableName}
		<include refid="sql_condition"/>
	</select>

    <sql id="sql_column_list">
		#foreach($column in $columns)`$column.columnName`#if($velocityCount != $columns.size()),#end#end

	</sql>

    <sql id="sql_condition">
        <where>
            #foreach($column in $columns)
                <if test="$column.attrname != null and $column.attrname.trim() != ''"> AND $column.columnName = #{$column.attrname} </if>
            #end
        </where>
    </sql>
	 
	<insert id="save" parameterType="${package}.domain.${className}DO"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
		INSERT INTO ${tableName}
		(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			`$column.columnName`#if($velocityCount != $columns.size()), #end

#end			
#end
		)
		VALUES
		(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			#{$column.attrname}#if($velocityCount != $columns.size()), #end

#end			
#end
		)
	</insert>
	 
	<update id="update" parameterType="${package}.domain.${className}DO">
		UPDATE ${tableName}
		<set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
			<if test="$column.attrname != null">`$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end</if>
#end
#end
		</set>
		WHERE ${pk.columnName} = #{${pk.attrname}}
	</update>

	<update id="updateAll" parameterType="${package}.domain.${className}DO">
		UPDATE ${tableName}
		SET
	#foreach($column in $columns)
	#if($column.columnName != $pk.columnName)`$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end

	#end
	#end
		WHERE ${pk.columnName} = #{${pk.attrname}}
	</update>

	
	<delete id="remove">
		DELETE FROM ${tableName} WHERE ${pk.columnName} = #{value}
	</delete>
	
	<delete id="batchRemove">
        DELETE FROM ${tableName} WHERE ${pk.columnName} IN
		<foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
			#{${pk.attrname}}
		</foreach>
	</delete>
	
</mapper>